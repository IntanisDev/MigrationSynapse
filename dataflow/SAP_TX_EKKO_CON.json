{
	"name": "SAP_TX_EKKO_CON",
	"properties": {
		"description": "Cabecera documento compras",
		"folder": {
			"name": "Datalake_Levis/Transacciones/02 Consumption"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TX_EKKO_ST",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DL_PQT_EKKO",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          MANDT as string,",
				"          EBELN as string,",
				"          BUKRS as string,",
				"          BSTYP as string,",
				"          BSART as string,",
				"          BSAKZ as string,",
				"          LOEKZ as string,",
				"          STATU as string,",
				"          AEDAT as string,",
				"          ERNAM as string,",
				"          PINCR as string,",
				"          LPONR as string,",
				"          LIFNR as string,",
				"          SPRAS as string,",
				"          ZTERM as string,",
				"          ZBD1T as string,",
				"          ZBD2T as string,",
				"          ZBD3T as string,",
				"          ZBD1P as string,",
				"          ZBD2P as string,",
				"          EKORG as string,",
				"          EKGRP as string,",
				"          WAERS as string,",
				"          WKURS as string,",
				"          KUFIX as string,",
				"          BEDAT as string,",
				"          KDATB as string,",
				"          KDATE as string,",
				"          BWBDT as string,",
				"          ANGDT as string,",
				"          BNDDT as string,",
				"          GWLDT as string,",
				"          AUSNR as string,",
				"          ANGNR as string,",
				"          IHRAN as string,",
				"          IHREZ as string,",
				"          VERKF as string,",
				"          TELF1 as string,",
				"          LLIEF as string,",
				"          KUNNR as string,",
				"          KONNR as string,",
				"          ABGRU as string,",
				"          AUTLF as string,",
				"          WEAKT as string,",
				"          RESWK as string,",
				"          LBLIF as string,",
				"          INCO1 as string,",
				"          INCO2 as string,",
				"          KTWRT as string,",
				"          SUBMI as string,",
				"          KNUMV as string,",
				"          KALSM as string,",
				"          STAFO as string,",
				"          LIFRE as string,",
				"          EXNUM as string,",
				"          UNSEZ as string,",
				"          LOGSY as string,",
				"          UPINC as string,",
				"          STAKO as string,",
				"          FRGGR as string,",
				"          FRGSX as string,",
				"          FRGKE as string,",
				"          FRGZU as string,",
				"          FRGRL as string,",
				"          LANDS as string,",
				"          LPHIS as string,",
				"          ADRNR as string,",
				"          STCEG_L as string,",
				"          STCEG as string,",
				"          ABSGR as string,",
				"          ADDNR as string,",
				"          KORNR as string,",
				"          MEMORY as string,",
				"          PROCSTAT as string,",
				"          RLWRT as string,",
				"          REVNO as string,",
				"          SCMPROC as string,",
				"          REASON_CODE as string,",
				"          MEMORYTYPE as string,",
				"          RETTP as string,",
				"          RETPC as string,",
				"          DPTYP as string,",
				"          DPPCT as string,",
				"          DPAMT as string,",
				"          DPDAT as string,",
				"          MSR_ID as string,",
				"          HIERARCHY_EXISTS as string,",
				"          THRESHOLD_EXISTS as string,",
				"          LEGAL_CONTRACT as string,",
				"          DESCRIPTION as string,",
				"          RELEASE_DATE as string,",
				"          FORCE_ID as string,",
				"          FORCE_CNT as string,",
				"          RELOC_ID as string,",
				"          RELOC_SEQ_ID as string,",
				"          SOURCE_LOGSYS as string,",
				"          ZZEXFDATE as string,",
				"          ZZORDERID as string,",
				"          ZZSCODE as string,",
				"          POHF_TYPE as string,",
				"          EQ_EINDT as string,",
				"          EQ_WERKS as string,",
				"          FIXPO as string,",
				"          EKGRP_ALLOW as string,",
				"          WERKS_ALLOW as string,",
				"          CONTRACT_ALLOW as string,",
				"          PSTYP_ALLOW as string,",
				"          FIXPO_ALLOW as string,",
				"          KEY_ID_ALLOW as string,",
				"          AUREL_ALLOW as string,",
				"          DELPER_ALLOW as string,",
				"          EINDT_ALLOW as string,",
				"          LTSNR_ALLOW as string,",
				"          OTB_LEVEL as string,",
				"          OTB_COND_TYPE as string,",
				"          KEY_ID as string,",
				"          OTB_VALUE as string,",
				"          OTB_CURR as string,",
				"          OTB_RES_VALUE as string,",
				"          OTB_SPEC_VALUE as string,",
				"          SPR_RSN_PROFILE as string,",
				"          BUDG_TYPE as string,",
				"          OTB_STATUS as string,",
				"          OTB_REASON as string,",
				"          CHECK_TYPE as string,",
				"          CON_OTB_REQ as string,",
				"          CON_PREBOOK_LEV as string,",
				"          CON_DISTR_LEV as string,",
				"          ZZDUMMY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(ZBD1T = toDecimal(ZBD1T,3,0),",
				"          ZBD2T = toDecimal(ZBD2T,3,0),",
				"          ZBD3T = toDecimal(ZBD3T,3,0),",
				"          ZBD1P = toDecimal(ZBD1P,5,3),",
				"          ZBD2P = toDecimal(ZBD2P,5,3),",
				"          WKURS = toDecimal(WKURS,9,5),",
				"          KTWRT = toDecimal(KTWRT,17,2),",
				"          RLWRT = toDecimal(RLWRT,17,2),",
				"          RETPC = toDecimal(RETPC,5,2),",
				"          DPPCT = toDecimal(DPPCT,5,2),",
				"          DPAMT = toDecimal(DPAMT,13,2),",
				"          OTB_VALUE = toDecimal(OTB_VALUE,19,2),",
				"          OTB_RES_VALUE = toDecimal(OTB_RES_VALUE,19,2),",
				"          OTB_SPEC_VALUE = toDecimal(OTB_SPEC_VALUE,19,2)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['TX_EKKO_ene2021_jun2022.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}
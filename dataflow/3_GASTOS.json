{
	"name": "3_GASTOS",
	"properties": {
		"description": "Carga Partidas Individuales de Gastos",
		"folder": {
			"name": "Finanzas/Gastos"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TRX_PARTIDAS_GASTO_RAW",
						"type": "DatasetReference"
					},
					"name": "Gastos"
				},
				{
					"linkedService": {
						"referenceName": "Synapse PRD edw_prd",
						"type": "LinkedServiceReference"
					},
					"name": "MappingCeco"
				},
				{
					"dataset": {
						"referenceName": "DM_SOCIEDAD_FI",
						"type": "DatasetReference"
					},
					"name": "DMSociedadFI"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TRX_GASTOS_STD",
						"type": "DatasetReference"
					},
					"name": "STDGASTOSDETALLE"
				},
				{
					"dataset": {
						"referenceName": "TRX_GASTOS_RESUMEN_STD",
						"type": "DatasetReference"
					},
					"name": "STDGASTOSRESUMEN"
				}
			],
			"transformations": [
				{
					"name": "calculoDecimal"
				},
				{
					"name": "buscaMapping"
				},
				{
					"name": "selectPlanCuentas"
				},
				{
					"name": "buscaPlanCuentas"
				},
				{
					"name": "AGREGARESUMEN",
					"description": "Elimina partidas individuales"
				}
			],
			"scriptLines": [
				"source(output(",
				"          RCLNT as string,",
				"          GL_SIRID as string,",
				"          RLDNR as string,",
				"          RRCTY as string,",
				"          RVERS as string,",
				"          RYEAR as integer,",
				"          RTCUR as string,",
				"          RUNIT as string,",
				"          DRCRK as string,",
				"          POPER as integer,",
				"          DOCCT as string,",
				"          DOCNR as string,",
				"          DOCLN as string,",
				"          RBUKRS as string,",
				"          RPRCTR as string,",
				"          RHOART as integer,",
				"          RFAREA as string,",
				"          KOKRS as string,",
				"          RACCT as string,",
				"          HRKFT as string,",
				"          RASSC as string,",
				"          EPRCTR as string,",
				"          ACTIV as string,",
				"          AFABE as integer,",
				"          OCLNT as integer,",
				"          SBUKRS as string,",
				"          SPRCTR as string,",
				"          SHOART as integer,",
				"          SFAREA as string,",
				"          TSL as string,",
				"          HSL as string,",
				"          KSL as string,",
				"          MSL as string,",
				"          CPUDT as string,",
				"          CPUTM as string,",
				"          USNAM as string,",
				"          SGTXT as string,",
				"          AUTOM as string,",
				"          DOCTY as string,",
				"          BLDAT as string,",
				"          BUDAT as string,",
				"          WSDAT as string,",
				"          REFDOCNR as string,",
				"          REFRYEAR as integer,",
				"          REFDOCLN as integer,",
				"          REFDOCCT as string,",
				"          REFACTIV as string,",
				"          AWTYP as string,",
				"          AWORG as string,",
				"          WERKS as string,",
				"          GSBER as string,",
				"          KOSTL as string,",
				"          LSTAR as string,",
				"          AUFNR as string,",
				"          AUFPL as integer,",
				"          ANLN1 as string,",
				"          ANLN2 as string,",
				"          MATNR as string,",
				"          BWKEY as string,",
				"          BWTAR as string,",
				"          ANBWA as string,",
				"          KUNNR as string,",
				"          LIFNR as string,",
				"          RMVCT as string,",
				"          EBELN as string,",
				"          EBELP as integer,",
				"          KSTRG as string,",
				"          ERKRS as string,",
				"          PAOBJNR as integer,",
				"          PASUBNR as integer,",
				"          PS_PSP_PNR as integer,",
				"          KDAUF as string,",
				"          KDPOS as integer,",
				"          FKART as string,",
				"          VKORG as string,",
				"          VTWEG as string,",
				"          AUBEL as string,",
				"          AUPOS as integer,",
				"          SPART as string,",
				"          VBELN as string,",
				"          POSNR as integer,",
				"          VKGRP as string,",
				"          VKBUR as string,",
				"          VBUND as string,",
				"          LOGSYS as string,",
				"          ALEBN as string,",
				"          AWSYS as string,",
				"          VERSA as string,",
				"          STFLG as string,",
				"          STOKZ as string,",
				"          STAGR as string,",
				"          GRTYP as string,",
				"          REP_MATNR as string,",
				"          CO_PRZNR as string,",
				"          IMKEY as string,",
				"          DABRZ as string,",
				"          VALUT as string,",
				"          RSCOPE as string,",
				"          AWREF_REV as string,",
				"          AWORG_REV as string,",
				"          BWART as string,",
				"          BLART as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Gastos",
				"source(output(",
				"          sociedad as string,",
				"          centro_costo as string,",
				"          descripcion as string,",
				"          canal as string,",
				"          marca as string,",
				"          grupo_p_l as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'synapseanalytics',",
				"     schemaName: 'finanzas',",
				"     tableName: 'mapping_Ceco_PL',",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     staged: true) ~> MappingCeco",
				"source(output(",
				"          Mandante as string,",
				"          Sociedad as string,",
				"          Sociedad_Texto as string,",
				"          Ciudad as string,",
				"          Pais as string,",
				"          Moneda as string,",
				"          Idioma as string,",
				"          Plan_de_cuentas as string,",
				"          Desviacion_TC_porcentaje as string,",
				"          Variante_ejercicio as string,",
				"          Ind_asignacion as string,",
				"          Sociedad_GL as string,",
				"          Direccion as string,",
				"          Entidad_CP as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> DMSociedadFI",
				"Gastos derive(TSL = toDecimal(TSL,15,2)*100,",
				"          HSL = toDecimal(HSL,15,2)*100,",
				"          KSL = toDecimal(KSL,15,2)*100,",
				"          MSL = toDecimal(MSL,15,2),",
				"          CPUDT = toDate(CPUDT, \"yyyyMMdd\"),",
				"          BUDAT = toDate(BUDAT, \"yyyyMMdd\"),",
				"          BLDAT = toDate(BLDAT, \"yyyyMMdd\"),",
				"          VALUT = toDate(VALUT, \"yyyyMMdd\"),",
				"          WSDAT = toDate(WSDAT, \"yyyyMMdd\"),",
				"          DABRZ = toDate(DABRZ, \"yyyyMMdd\")) ~> calculoDecimal",
				"calculoDecimal, MappingCeco lookup(KOKRS == sociedad",
				"     && KOSTL == centro_costo,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(centro_costo, true),",
				"     broadcast: 'auto')~> buscaMapping",
				"DMSociedadFI select(mapColumn(",
				"          Mandante,",
				"          Sociedad,",
				"          Plan_de_cuentas",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectPlanCuentas",
				"buscaMapping, selectPlanCuentas lookup(RCLNT == Mandante",
				"     && RBUKRS == selectPlanCuentas@Sociedad,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(selectPlanCuentas@Sociedad, true),",
				"     broadcast: 'auto')~> buscaPlanCuentas",
				"buscaPlanCuentas aggregate(groupBy(RCLNT,",
				"          RLDNR,",
				"          RRCTY,",
				"          RVERS,",
				"          RYEAR,",
				"          RTCUR,",
				"          RUNIT,",
				"          POPER,",
				"          DOCCT,",
				"          RBUKRS,",
				"          RPRCTR,",
				"          RFAREA,",
				"          KOKRS,",
				"          RACCT,",
				"          HRKFT,",
				"          RASSC,",
				"          EPRCTR,",
				"          ACTIV,",
				"          AFABE,",
				"          OCLNT,",
				"          SBUKRS,",
				"          SPRCTR,",
				"          SHOART,",
				"          SFAREA,",
				"          AUTOM,",
				"          DOCTY,",
				"          BUDAT,",
				"          WERKS,",
				"          GSBER,",
				"          KOSTL,",
				"          LSTAR,",
				"          BWKEY,",
				"          BWTAR,",
				"          ANBWA,",
				"          KUNNR,",
				"          LIFNR,",
				"          RMVCT,",
				"          ERKRS,",
				"          FKART,",
				"          VKORG,",
				"          VTWEG,",
				"          SPART,",
				"          VKGRP,",
				"          VKBUR,",
				"          VBUND,",
				"          LOGSYS,",
				"          STFLG,",
				"          STOKZ,",
				"          STAGR,",
				"          GRTYP,",
				"          REP_MATNR,",
				"          DABRZ,",
				"          VALUT,",
				"          RSCOPE,",
				"          BWART,",
				"          BLART,",
				"          grupo_p_l,",
				"          Plan_de_cuentas),",
				"     TSL = sum(TSL),",
				"          HSL = sum(HSL),",
				"          KSL = sum(KSL),",
				"          MSL = sum(MSL),",
				"     partitionBy('hash', 1)) ~> AGREGARESUMEN",
				"buscaPlanCuentas sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:[(concat('PI_GASTOS_',toString(addDays(currentDate(),-1)),'.PARQUET'))],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     mapColumn(",
				"          RCLNT,",
				"          GL_SIRID,",
				"          RLDNR,",
				"          RRCTY,",
				"          RVERS,",
				"          RYEAR,",
				"          RTCUR,",
				"          RUNIT,",
				"          DRCRK,",
				"          POPER,",
				"          DOCCT,",
				"          DOCNR,",
				"          DOCLN,",
				"          RBUKRS,",
				"          RPRCTR,",
				"          RHOART,",
				"          RFAREA,",
				"          KOKRS,",
				"          RACCT,",
				"          HRKFT,",
				"          RASSC,",
				"          EPRCTR,",
				"          ACTIV,",
				"          AFABE,",
				"          OCLNT,",
				"          SBUKRS,",
				"          SPRCTR,",
				"          SHOART,",
				"          SFAREA,",
				"          TSL,",
				"          HSL,",
				"          KSL,",
				"          MSL,",
				"          CPUDT,",
				"          CPUTM,",
				"          USNAM,",
				"          SGTXT,",
				"          AUTOM,",
				"          DOCTY,",
				"          BLDAT,",
				"          BUDAT,",
				"          WSDAT,",
				"          REFDOCNR,",
				"          REFRYEAR,",
				"          REFDOCLN,",
				"          REFDOCCT,",
				"          REFACTIV,",
				"          AWTYP,",
				"          AWORG,",
				"          WERKS,",
				"          GSBER,",
				"          KOSTL,",
				"          LSTAR,",
				"          AUFNR,",
				"          AUFPL,",
				"          ANLN1,",
				"          ANLN2,",
				"          MATNR,",
				"          BWKEY,",
				"          BWTAR,",
				"          ANBWA,",
				"          KUNNR,",
				"          LIFNR,",
				"          RMVCT,",
				"          EBELN,",
				"          EBELP,",
				"          KSTRG,",
				"          ERKRS,",
				"          PAOBJNR,",
				"          PASUBNR,",
				"          PS_PSP_PNR,",
				"          KDAUF,",
				"          KDPOS,",
				"          FKART,",
				"          VKORG,",
				"          VTWEG,",
				"          AUBEL,",
				"          AUPOS,",
				"          SPART,",
				"          VBELN,",
				"          POSNR,",
				"          VKGRP,",
				"          VKBUR,",
				"          VBUND,",
				"          LOGSYS,",
				"          ALEBN,",
				"          AWSYS,",
				"          VERSA,",
				"          STFLG,",
				"          STOKZ,",
				"          STAGR,",
				"          GRTYP,",
				"          REP_MATNR,",
				"          CO_PRZNR,",
				"          IMKEY,",
				"          DABRZ,",
				"          VALUT,",
				"          RSCOPE,",
				"          AWREF_REV,",
				"          AWORG_REV,",
				"          BWART,",
				"          BLART,",
				"          grupo_p_l,",
				"          Plan_de_cuentas",
				"     ),",
				"     partitionBy('hash', 1)) ~> STDGASTOSDETALLE",
				"AGREGARESUMEN sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:[(concat('GASTOS_RESUMEN_',toString(addDays(currentDate(),-1)),'.PARQUET'))],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          RCLNT,",
				"          RLDNR,",
				"          RRCTY,",
				"          RVERS,",
				"          RYEAR,",
				"          RTCUR,",
				"          RUNIT,",
				"          POPER,",
				"          DOCCT,",
				"          RBUKRS,",
				"          RPRCTR,",
				"          RFAREA,",
				"          KOKRS,",
				"          RACCT,",
				"          HRKFT,",
				"          RASSC,",
				"          EPRCTR,",
				"          ACTIV,",
				"          AFABE,",
				"          OCLNT,",
				"          SBUKRS,",
				"          SPRCTR,",
				"          SHOART,",
				"          SFAREA,",
				"          AUTOM,",
				"          DOCTY,",
				"          BUDAT,",
				"          WERKS,",
				"          GSBER,",
				"          KOSTL,",
				"          LSTAR,",
				"          BWKEY,",
				"          BWTAR,",
				"          ANBWA,",
				"          KUNNR,",
				"          LIFNR,",
				"          RMVCT,",
				"          ERKRS,",
				"          FKART,",
				"          VKORG,",
				"          VTWEG,",
				"          SPART,",
				"          VKGRP,",
				"          VKBUR,",
				"          VBUND,",
				"          LOGSYS,",
				"          STFLG,",
				"          STOKZ,",
				"          STAGR,",
				"          GRTYP,",
				"          REP_MATNR,",
				"          DABRZ,",
				"          VALUT,",
				"          RSCOPE,",
				"          BWART,",
				"          BLART,",
				"          grupo_p_l,",
				"          Plan_de_cuentas,",
				"          TSL,",
				"          HSL,",
				"          KSL,",
				"          MSL",
				"     ),",
				"     partitionBy('hash', 1)) ~> STDGASTOSRESUMEN"
			]
		}
	}
}
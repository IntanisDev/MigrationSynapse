{
	"name": "DF_CARGA_VENTA_CHILE_ST_AUTOMATICO",
	"properties": {
		"folder": {
			"name": "Datalake_Levis/02 Retail/02 Standar"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DL_CE11000_RW_MANUAL",
						"type": "DatasetReference"
					},
					"name": "CE11000A"
				},
				{
					"dataset": {
						"referenceName": "DL_CE11000_RW_MANUAL",
						"type": "DatasetReference"
					},
					"name": "CE11000B"
				},
				{
					"dataset": {
						"referenceName": "DM_TASA_CAMBIO",
						"type": "DatasetReference"
					},
					"name": "TasaCambio"
				},
				{
					"dataset": {
						"referenceName": "DM_Tiendas_M2_ST",
						"type": "DatasetReference"
					},
					"name": "TiendasM2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DL_CE11000_ST_MANUAL",
						"type": "DatasetReference"
					},
					"name": "CE11000ST"
				}
			],
			"transformations": [
				{
					"name": "FiltrarMonedaLocal"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "FiltrarMonedaLocal3"
				},
				{
					"name": "FiltrarMonedaPeru"
				},
				{
					"name": "union1"
				},
				{
					"name": "join2"
				},
				{
					"name": "select3"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "select4"
				},
				{
					"name": "ToDecimal"
				},
				{
					"name": "join3"
				},
				{
					"name": "select5"
				}
			],
			"scriptLines": [
				"parameters{",
				"     nombreArchivo as string (concat('CE11000_',substring(BUDAT,1,6),'.csv'))",
				"}",
				"source(output(",
				"          MANDT as string,",
				"          PALEDGER as string,",
				"          VRGAR as string,",
				"          VERSI as string,",
				"          PERIO as string,",
				"          PAOBJNR as string,",
				"          PASUBNR as string,",
				"          BELNR as string,",
				"          POSNR as string,",
				"          HZDAT as string,",
				"          USNAM as string,",
				"          GJAHR as string,",
				"          PERDE as string,",
				"          WADAT as string,",
				"          FADAT as string,",
				"          BUDAT as string,",
				"          ALTPERIO as string,",
				"          PAPAOBJNR as string,",
				"          PAPASUBNR as string,",
				"          KNDNR as string,",
				"          ARTNR as string,",
				"          FKART as string,",
				"          FRWAE as string,",
				"          KURSF as string,",
				"          KURSBK as string,",
				"          KURSKZ as string,",
				"          REC_WAERS as string,",
				"          KAUFN as string,",
				"          KDPOS as string,",
				"          RKAUFNR as string,",
				"          SKOST as string,",
				"          PRZNR as string,",
				"          BUKRS as string,",
				"          KOKRS as string,",
				"          WERKS as string,",
				"          GSBER as string,",
				"          VKORG as string,",
				"          VTWEG as string,",
				"          SPART as string,",
				"          HRKFT as string,",
				"          PLIKZ as string,",
				"          KSTAR as string,",
				"          PSPNR as string,",
				"          KSTRG as string,",
				"          RBELN as string,",
				"          RPOSN as string,",
				"          STO_BELNR as string,",
				"          STO_POSNR as string,",
				"          PRCTR as string,",
				"          PPRCTR as string,",
				"          RKESTATU as string,",
				"          TIMESTMP as string,",
				"          COPA_AWTYP as string,",
				"          COPA_AWORG as string,",
				"          COPA_BWZPT as string,",
				"          COPA_AWSYS as string,",
				"          KMMAKL as string,",
				"          KMVTNR as string,",
				"          WW010 as string,",
				"          WW020 as string,",
				"          WW021 as string,",
				"          WW022 as string,",
				"          WW023 as string,",
				"          WW024 as string,",
				"          WGRU1 as string,",
				"          MTART as string,",
				"          PMATA as string,",
				"          KUNRG as string,",
				"          WW025 as string,",
				"          WW026 as string,",
				"          WW027 as string,",
				"          WW028 as string,",
				"          WW029 as string,",
				"          WW030 as string,",
				"          WW031 as string,",
				"          WW032 as string,",
				"          WW033 as string,",
				"          WW034 as string,",
				"          WW035 as string,",
				"          ABSMG_ME as string,",
				"          VV006_ME as string,",
				"          ERLOS as string,",
				"          KWAKRB as string,",
				"          KWKDRB as string,",
				"          KWMARB as string,",
				"          KWMGRB as string,",
				"          KWSKTO as string,",
				"          KWSOHD as string,",
				"          MRABA as string,",
				"          RABAT as string,",
				"          ABSMG as string,",
				"          VV001 as string,",
				"          VV002 as string,",
				"          VV003 as string,",
				"          VV004 as string,",
				"          VV005 as string,",
				"          VV006 as string,",
				"          ZZCAP_WAM as string,",
				"          ZZD_CAP_WAM as string,",
				"          ZZCONS_GRP_2 as string,",
				"          ZZD_CONS_GRP_2 as string,",
				"          ZZCONS_TRG as string,",
				"          ZZD_CONS_TRG as string,",
				"          ZZFIT_REF as string,",
				"          ZZD_FIT_REF as string,",
				"          ZZGL_FIT_PLAT as string,",
				"          ZZPROD_LINE as string,",
				"          ZZD_PROD_LINE as string,",
				"          ZZPROD_NAME as string,",
				"          ZZPROG as string,",
				"          ZZD_PROG as string,",
				"          ZZSUB_CLASS as string,",
				"          ZZSUST as string,",
				"          ZZD_SUST as string,",
				"          ZZTECNO as string,",
				"          ZZD_TECNO as string,",
				"          ZZTIER as string,",
				"          ZZD_TIER as string,",
				"          ZZCLASS as string,",
				"          ZZD_CLASS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CE11000A",
				"source(output(",
				"          MANDT as string,",
				"          PALEDGER as string,",
				"          VRGAR as string,",
				"          VERSI as string,",
				"          PERIO as string,",
				"          PAOBJNR as string,",
				"          PASUBNR as string,",
				"          BELNR as string,",
				"          POSNR as string,",
				"          HZDAT as string,",
				"          USNAM as string,",
				"          GJAHR as string,",
				"          PERDE as string,",
				"          WADAT as string,",
				"          FADAT as string,",
				"          BUDAT as string,",
				"          ALTPERIO as string,",
				"          PAPAOBJNR as string,",
				"          PAPASUBNR as string,",
				"          KNDNR as string,",
				"          ARTNR as string,",
				"          FKART as string,",
				"          FRWAE as string,",
				"          KURSF as string,",
				"          KURSBK as string,",
				"          KURSKZ as string,",
				"          REC_WAERS as string,",
				"          KAUFN as string,",
				"          KDPOS as string,",
				"          RKAUFNR as string,",
				"          SKOST as string,",
				"          PRZNR as string,",
				"          BUKRS as string,",
				"          KOKRS as string,",
				"          WERKS as string,",
				"          GSBER as string,",
				"          VKORG as string,",
				"          VTWEG as string,",
				"          SPART as string,",
				"          HRKFT as string,",
				"          PLIKZ as string,",
				"          KSTAR as string,",
				"          PSPNR as string,",
				"          KSTRG as string,",
				"          RBELN as string,",
				"          RPOSN as string,",
				"          STO_BELNR as string,",
				"          STO_POSNR as string,",
				"          PRCTR as string,",
				"          PPRCTR as string,",
				"          RKESTATU as string,",
				"          TIMESTMP as string,",
				"          COPA_AWTYP as string,",
				"          COPA_AWORG as string,",
				"          COPA_BWZPT as string,",
				"          COPA_AWSYS as string,",
				"          KMMAKL as string,",
				"          KMVTNR as string,",
				"          WW010 as string,",
				"          WW020 as string,",
				"          WW021 as string,",
				"          WW022 as string,",
				"          WW023 as string,",
				"          WW024 as string,",
				"          WGRU1 as string,",
				"          MTART as string,",
				"          PMATA as string,",
				"          KUNRG as string,",
				"          WW025 as string,",
				"          WW026 as string,",
				"          WW027 as string,",
				"          WW028 as string,",
				"          WW029 as string,",
				"          WW030 as string,",
				"          WW031 as string,",
				"          WW032 as string,",
				"          WW033 as string,",
				"          WW034 as string,",
				"          WW035 as string,",
				"          ABSMG_ME as string,",
				"          VV006_ME as string,",
				"          ERLOS as string,",
				"          KWAKRB as string,",
				"          KWKDRB as string,",
				"          KWMARB as string,",
				"          KWMGRB as string,",
				"          KWSKTO as string,",
				"          KWSOHD as string,",
				"          MRABA as string,",
				"          RABAT as string,",
				"          ABSMG as string,",
				"          VV001 as string,",
				"          VV002 as string,",
				"          VV003 as string,",
				"          VV004 as string,",
				"          VV005 as string,",
				"          VV006 as string,",
				"          ZZCAP_WAM as string,",
				"          ZZD_CAP_WAM as string,",
				"          ZZCONS_GRP_2 as string,",
				"          ZZD_CONS_GRP_2 as string,",
				"          ZZCONS_TRG as string,",
				"          ZZD_CONS_TRG as string,",
				"          ZZFIT_REF as string,",
				"          ZZD_FIT_REF as string,",
				"          ZZGL_FIT_PLAT as string,",
				"          ZZPROD_LINE as string,",
				"          ZZD_PROD_LINE as string,",
				"          ZZPROD_NAME as string,",
				"          ZZPROG as string,",
				"          ZZD_PROG as string,",
				"          ZZSUB_CLASS as string,",
				"          ZZSUST as string,",
				"          ZZD_SUST as string,",
				"          ZZTECNO as string,",
				"          ZZD_TECNO as string,",
				"          ZZTIER as string,",
				"          ZZD_TIER as string,",
				"          ZZCLASS as string,",
				"          ZZD_CLASS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CE11000B",
				"source(output(",
				"          MONEDA_DE as string,",
				"          MONEDA_A as string,",
				"          TASA_CAMBIO as string,",
				"          TIPO_CAMBIO as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TasaCambio",
				"source(output(",
				"          {SAP ID} as string,",
				"          {Open Date} as string,",
				"          {Gross Size} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TiendasM2",
				"CE11000A filter(PALEDGER== '02') ~> FiltrarMonedaLocal",
				"FiltrarMonedaLocal derive(TIPO_CAMBIO = 3,",
				"          MONEDA = REC_WAERS,",
				"          TASA_CAMBIO = toString('0'),",
				"          ERLOS = toDecimal(ERLOS,15,2),",
				"          KWAKRB = toDecimal(KWAKRB,15,2),",
				"          KWKDRB = toDecimal(KWKDRB,15,2),",
				"          KWMARB = toDecimal(KWMARB,15,2),",
				"          KWMGRB = toDecimal(KWMGRB,15,2),",
				"          KWSKTO = toDecimal(KWSKTO,15,2),",
				"          KWSOHD = toDecimal(KWSOHD,15,2),",
				"          MRABA = toDecimal(MRABA,15,2),",
				"          RABAT = toDecimal(RABAT,15,2),",
				"          ABSMG = toDecimal(ABSMG,15,2),",
				"          VV001 = toDecimal(VV001,15,2),",
				"          VV002 = toDecimal(VV002,15,2),",
				"          VV003 = toDecimal(VV003,15,2),",
				"          VV004 = toDecimal(VV004,15,2),",
				"          VV005 = toDecimal(VV005,15,2),",
				"          VV006 = toDecimal(VV006,15,2)) ~> derivedColumn1",
				"CE11000B filter(PALEDGER == '02') ~> FiltrarMonedaLocal3",
				"TasaCambio filter(MONEDA_DE=='CLP' && MONEDA_A=='USD') ~> FiltrarMonedaPeru",
				"derivedColumn1, derivedColumn5 union(byName: true)~> union1",
				"FiltrarMonedaLocal3, select4 join(REC_WAERS == MONEDA,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          each(match(true()))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 derive(MONEDA = toString('USD'),",
				"          ERLOS = toDecimal(divide(toDecimal(ERLOS,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          KWAKRB = toDecimal(divide(toDecimal(KWAKRB,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          KWKDRB = toDecimal(divide(toDecimal(KWKDRB,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          KWMARB = toDecimal(divide(toDecimal(KWMARB,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          KWMGRB = toDecimal(divide(toDecimal(KWMGRB,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          KWSKTO = toDecimal(divide(toDecimal(KWSKTO,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          KWSOHD = toDecimal(divide(toDecimal(KWSOHD,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          MRABA = toDecimal(divide(toDecimal(MRABA,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          RABAT = toDecimal(divide(toDecimal(RABAT,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          ABSMG = toDecimal(divide(toDecimal(ABSMG,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          VV001 = toDecimal(divide(toDecimal(VV001,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          VV002 = toDecimal(divide(toDecimal(VV002,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          VV003 = toDecimal(divide(toDecimal(VV003,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          VV004 = toDecimal(divide(toDecimal(VV004,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          VV005 = toDecimal(divide(toDecimal(VV005,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2),",
				"          VV006 = toDecimal(divide(toDecimal(VV006,15,2), toDecimal(TASA_CAMBIO,15,4)),15,2)) ~> derivedColumn5",
				"FiltrarMonedaPeru derive(MONEDA = MONEDA_DE) ~> derivedColumn6",
				"derivedColumn6 select(mapColumn(",
				"          TASA_CAMBIO,",
				"          TIPO_CAMBIO,",
				"          MONEDA",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"union1 derive(ERLOS = toDecimal(ERLOS, 15,2)*100,",
				"          KWAKRB = toDecimal(KWAKRB,15,2)*100,",
				"          KWKDRB = toDecimal(KWKDRB,15,2)*100,",
				"          KWMARB = toDecimal(KWMARB,15,2)*100,",
				"          KWMGRB = toDecimal(KWMGRB,15,2)*100,",
				"          KWSKTO = toDecimal(KWSKTO,15,2)*100,",
				"          KWSOHD = toDecimal(KWSOHD,15,2)*100,",
				"          MRABA = toDecimal(MRABA,15,2)*100,",
				"          RABAT = toDecimal(RABAT,15,2)*100,",
				"          ABSMG = toDecimal(ABSMG,15,2),",
				"          VV001 = toDecimal(VV001,15,2)*100,",
				"          VV002 = toDecimal(VV002,15,2)*100,",
				"          VV003 = toDecimal(VV003,15,2)*100,",
				"          VV004 = toDecimal(VV004,15,2)*100,",
				"          VV005 = toDecimal(VV005,15,2)*100,",
				"          VV006 = toDecimal(VV006,15,2),",
				"          TASA_CAMBIO = toDecimal(TASA_CAMBIO,15,4)) ~> ToDecimal",
				"ToDecimal, select5 join(KNDNR == SAP_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"TiendasM2 select(mapColumn(",
				"          SAP_ID = {SAP ID},",
				"          OPEN_DATE = {Open Date},",
				"          GROSS_SIZE = {Gross Size}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"join3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          MANDT as string,",
				"          PALEDGER as string,",
				"          VRGAR as string,",
				"          VERSI as string,",
				"          PERIO as string,",
				"          PAOBJNR as string,",
				"          PASUBNR as string,",
				"          BELNR as string,",
				"          POSNR as string,",
				"          HZDAT as string,",
				"          USNAM as string,",
				"          GJAHR as string,",
				"          PERDE as string,",
				"          WADAT as string,",
				"          FADAT as string,",
				"          BUDAT as string,",
				"          ALTPERIO as string,",
				"          PAPAOBJNR as string,",
				"          PAPASUBNR as string,",
				"          KNDNR as string,",
				"          ARTNR as string,",
				"          FKART as string,",
				"          FRWAE as string,",
				"          KURSF as string,",
				"          KURSBK as string,",
				"          KURSKZ as string,",
				"          REC_WAERS as string,",
				"          KAUFN as string,",
				"          KDPOS as string,",
				"          RKAUFNR as string,",
				"          SKOST as string,",
				"          PRZNR as string,",
				"          BUKRS as string,",
				"          KOKRS as string,",
				"          WERKS as string,",
				"          GSBER as string,",
				"          VKORG as string,",
				"          VTWEG as string,",
				"          SPART as string,",
				"          HRKFT as string,",
				"          PLIKZ as string,",
				"          KSTAR as string,",
				"          PSPNR as string,",
				"          KSTRG as string,",
				"          RBELN as string,",
				"          RPOSN as string,",
				"          STO_BELNR as string,",
				"          STO_POSNR as string,",
				"          PRCTR as string,",
				"          PPRCTR as string,",
				"          RKESTATU as string,",
				"          TIMESTMP as string,",
				"          COPA_AWTYP as string,",
				"          COPA_AWORG as string,",
				"          COPA_BWZPT as string,",
				"          COPA_AWSYS as string,",
				"          KMMAKL as string,",
				"          KMVTNR as string,",
				"          WW010 as string,",
				"          WW020 as string,",
				"          WW021 as string,",
				"          WW022 as string,",
				"          WW023 as string,",
				"          WW024 as string,",
				"          WGRU1 as string,",
				"          MTART as string,",
				"          PMATA as string,",
				"          KUNRG as string,",
				"          WW025 as string,",
				"          WW026 as string,",
				"          WW027 as string,",
				"          WW028 as string,",
				"          WW029 as string,",
				"          WW030 as string,",
				"          WW031 as string,",
				"          WW032 as string,",
				"          WW033 as string,",
				"          WW034 as string,",
				"          WW035 as string,",
				"          ABSMG_ME as string,",
				"          VV006_ME as string,",
				"          ERLOS as string,",
				"          KWAKRB as string,",
				"          KWKDRB as string,",
				"          KWMARB as string,",
				"          KWMGRB as string,",
				"          KWSKTO as string,",
				"          KWSOHD as string,",
				"          MRABA as string,",
				"          RABAT as string,",
				"          ABSMG as string,",
				"          VV001 as string,",
				"          VV002 as string,",
				"          VV003 as string,",
				"          VV004 as string,",
				"          VV005 as string,",
				"          VV006 as string,",
				"          ZZCAP_WAM as string,",
				"          ZZD_CAP_WAM as string,",
				"          ZZCONS_GRP_2 as string,",
				"          ZZD_CONS_GRP_2 as string,",
				"          ZZCONS_TRG as string,",
				"          ZZD_CONS_TRG as string,",
				"          ZZFIT_REF as string,",
				"          ZZD_FIT_REF as string,",
				"          ZZGL_FIT_PLAT as string,",
				"          ZZPROD_LINE as string,",
				"          ZZD_PROD_LINE as string,",
				"          ZZPROD_NAME as string,",
				"          ZZPROG as string,",
				"          ZZD_PROG as string,",
				"          ZZSUB_CLASS as string,",
				"          ZZSUST as string,",
				"          ZZD_SUST as string,",
				"          ZZTECNO as string,",
				"          ZZD_TECNO as string,",
				"          ZZTIER as string,",
				"          ZZD_TIER as string,",
				"          ZZCLASS as string,",
				"          ZZD_CLASS as string,",
				"          TIPO_CAMBIO as string,",
				"          MONEDA as string,",
				"          TASA_CAMBIO as string,",
				"          SAP_ID as string,",
				"          OPEN_DATE as string,",
				"          GROSS_SIZE as string",
				"     ),",
				"     partitionFileNames:[($nombreArchivo)],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> CE11000ST"
			]
		}
	}
}
{
	"name": "SAP_TX_VBRP_2021_CON",
	"properties": {
		"folder": {
			"name": "Datalake_Levis/Transacciones/02 Consumption"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TX_VBRP_2021_ST",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DL_PQT_VBRP",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          MANDT as string,",
				"          VBELN as string,",
				"          POSNR as string,",
				"          UEPOS as string,",
				"          FKIMG as string,",
				"          VRKME as string,",
				"          UMVKZ as string,",
				"          UMVKN as string,",
				"          MEINS as string,",
				"          SMENG as string,",
				"          FKLMG as string,",
				"          LMENG as string,",
				"          NTGEW as string,",
				"          BRGEW as string,",
				"          GEWEI as string,",
				"          VOLUM as string,",
				"          VOLEH as string,",
				"          GSBER as string,",
				"          PRSDT as string,",
				"          FBUDA as string,",
				"          KURSK as string,",
				"          NETWR as string,",
				"          VBELV as string,",
				"          POSNV as string,",
				"          VGBEL as string,",
				"          VGPOS as string,",
				"          VGTYP as string,",
				"          AUBEL as string,",
				"          AUPOS as string,",
				"          AUREF as string,",
				"          MATNR as string,",
				"          ARKTX as string,",
				"          PMATN as string,",
				"          CHARG as string,",
				"          MATKL as string,",
				"          PSTYV as string,",
				"          POSAR as string,",
				"          PRODH as string,",
				"          VSTEL as string,",
				"          ATPKZ as string,",
				"          SPART as string,",
				"          POSPA as string,",
				"          WERKS as string,",
				"          ALAND as string,",
				"          WKREG as string,",
				"          WKCOU as string,",
				"          WKCTY as string,",
				"          TAXM1 as string,",
				"          TAXM2 as string,",
				"          TAXM3 as string,",
				"          TAXM4 as string,",
				"          TAXM5 as string,",
				"          TAXM6 as string,",
				"          TAXM7 as string,",
				"          TAXM8 as string,",
				"          TAXM9 as string,",
				"          KOWRR as string,",
				"          PRSFD as string,",
				"          SKTOF as string,",
				"          SKFBP as string,",
				"          KONDM as string,",
				"          KTGRM as string,",
				"          KOSTL as string,",
				"          BONUS as string,",
				"          PROVG as string,",
				"          EANNR as string,",
				"          VKGRP as string,",
				"          VKBUR as string,",
				"          SPARA as string,",
				"          SHKZG as string,",
				"          ERNAM as string,",
				"          ERDAT as string,",
				"          ERZET as string,",
				"          BWTAR as string,",
				"          LGORT as string,",
				"          STAFO as string,",
				"          WAVWR as string,",
				"          KZWI1 as string,",
				"          KZWI2 as string,",
				"          KZWI3 as string,",
				"          KZWI4 as string,",
				"          KZWI5 as string,",
				"          KZWI6 as string,",
				"          STCUR as string,",
				"          UVPRS as string,",
				"          UVALL as string,",
				"          EAN11 as string,",
				"          PRCTR as string,",
				"          KVGR1 as string,",
				"          KVGR2 as string,",
				"          KVGR3 as string,",
				"          KVGR4 as string,",
				"          KVGR5 as string,",
				"          MVGR1 as string,",
				"          MVGR2 as string,",
				"          MVGR3 as string,",
				"          MVGR4 as string,",
				"          MVGR5 as string,",
				"          MATWA as string,",
				"          BONBA as string,",
				"          KOKRS as string,",
				"          PAOBJNR as string,",
				"          PS_PSP_PNR as string,",
				"          AUFNR as string,",
				"          TXJCD as string,",
				"          CMPRE as string,",
				"          CMPNT as string,",
				"          CUOBJ as string,",
				"          CUOBJ_CH as string,",
				"          KOUPD as string,",
				"          UECHA as string,",
				"          XCHAR as string,",
				"          ABRVW as string,",
				"          SERNR as string,",
				"          BZIRK_AUFT as string,",
				"          KDGRP_AUFT as string,",
				"          KONDA_AUFT as string,",
				"          LLAND_AUFT as string,",
				"          MPROK as string,",
				"          PLTYP_AUFT as string,",
				"          REGIO_AUFT as string,",
				"          VKORG_AUFT as string,",
				"          VTWEG_AUFT as string,",
				"          ABRBG as string,",
				"          PROSA as string,",
				"          UEPVW as string,",
				"          AUTYP as string,",
				"          STADAT as string,",
				"          FPLNR as string,",
				"          FPLTR as string,",
				"          AKTNR as string,",
				"          KNUMA_PI as string,",
				"          KNUMA_AG as string,",
				"          PREFE as string,",
				"          MWSBP as string,",
				"          AUGRU_AUFT as string,",
				"          FAREG as string,",
				"          UPMAT as string,",
				"          UKONM as string,",
				"          CMPRE_FLT as string,",
				"          ABFOR as string,",
				"          ABGES as string,",
				"          J_1ARFZ as string,",
				"          J_1AREGIO as string,",
				"          J_1AGICD as string,",
				"          J_1ADTYP as string,",
				"          J_1ATXREL as string,",
				"          J_1BCFOP as string,",
				"          J_1BTAXLW1 as string,",
				"          J_1BTAXLW2 as string,",
				"          J_1BTXSDC as string,",
				"          BRTWR as string,",
				"          WKTNR as string,",
				"          WKTPS as string,",
				"          RPLNR as string,",
				"          KURSK_DAT as string,",
				"          WGRU1 as string,",
				"          WGRU2 as string,",
				"          KDKG1 as string,",
				"          KDKG2 as string,",
				"          KDKG3 as string,",
				"          KDKG4 as string,",
				"          KDKG5 as string,",
				"          VKAUS as string,",
				"          J_1AINDXP as string,",
				"          J_1AIDATEP as string,",
				"          KZFME as string,",
				"          MWSKZ as string,",
				"          VERTT as string,",
				"          VERTN as string,",
				"          SGTXT as string,",
				"          DELCO as string,",
				"          BEMOT as string,",
				"          RRREL as string,",
				"          AKKUR as string,",
				"          WMINR as string,",
				"          VGBEL_EX as string,",
				"          VGPOS_EX as string,",
				"          LOGSYS as string,",
				"          VGTYP_EX as string,",
				"          J_1BTAXLW3 as string,",
				"          J_1BTAXLW4 as string,",
				"          J_1BTAXLW5 as string,",
				"          MSR_ID as string,",
				"          MSR_REFUND_CODE as string,",
				"          MSR_RET_REASON as string,",
				"          AUFPL as string,",
				"          APLZL as string,",
				"          PEROP_BEG as string,",
				"          PEROP_END as string,",
				"          FONDS as string,",
				"          FISTL as string,",
				"          FKBER as string,",
				"          GRANT_NBR as string,",
				"          BUDGET_PD as string,",
				"          CAMPAIGN as string,",
				"          COMPREAS as string,",
				"          ZZMARCA as string,",
				"          ZZTIPO as string,",
				"          ZZGENERO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(FKIMG = toDecimal(FKIMG,13,3),",
				"          UMVKZ = toDecimal(UMVKZ,5,0),",
				"          UMVKN = toDecimal(UMVKN,5,0),",
				"          SMENG = toDecimal(SMENG,13,3),",
				"          FKLMG = toDecimal(FKLMG,13,3),",
				"          LMENG = toDecimal(LMENG,13,3),",
				"          NTGEW = toDecimal(NTGEW,15,3),",
				"          BRGEW = toDecimal(BRGEW,15,3),",
				"          VOLUM = toDecimal(VOLUM,15,3),",
				"          KURSK = toDecimal(KURSK,9,5),",
				"          NETWR = toDecimal(NETWR,15,2),",
				"          SKFBP = toDecimal(SKFBP,13,2),",
				"          WAVWR = toDecimal(WAVWR,13,2),",
				"          KZWI1 = toDecimal(KZWI1,13,2),",
				"          KZWI2 = toDecimal(KZWI2,13,2),",
				"          KZWI3 = toDecimal(KZWI3,13,2),",
				"          KZWI4 = toDecimal(KZWI4,13,2),",
				"          KZWI5 = toDecimal(KZWI5,13,2),",
				"          KZWI6 = toDecimal(KZWI6,13,2),",
				"          STCUR = toDecimal(STCUR,9,5),",
				"          BONBA = toDecimal(BONBA,13,2),",
				"          CMPRE = toDecimal(CMPRE,11,2),",
				"          MWSBP = toDecimal(MWSBP,13,2),",
				"          CMPRE_FLT = toDecimal(CMPRE_FLT,16,16),",
				"          ABGES = toDecimal(ABGES,16,16),",
				"          BRTWR = toDecimal(BRTWR,15,2),",
				"          AKKUR = toDecimal(AKKUR,9,5)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['TX_VBRP_ene2021_abr2022.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}
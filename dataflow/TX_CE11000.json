{
	"name": "TX_CE11000",
	"properties": {
		"folder": {
			"name": "Datalake_Levis/Datos Maestros/02 Consumption"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DL_CE11000_ST_MANUAL",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DL_CE12000_ST_MANUAL",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "DM_Tiendas_M2_ST",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DL_PQT_CE11000",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "union1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          MANDT as string,",
				"          PALEDGER as string,",
				"          VRGAR as string,",
				"          VERSI as string,",
				"          PERIO as string,",
				"          PAOBJNR as string,",
				"          PASUBNR as string,",
				"          BELNR as string,",
				"          POSNR as string,",
				"          HZDAT as string,",
				"          USNAM as string,",
				"          GJAHR as string,",
				"          PERDE as string,",
				"          WADAT as string,",
				"          FADAT as string,",
				"          BUDAT as string,",
				"          ALTPERIO as string,",
				"          PAPAOBJNR as string,",
				"          PAPASUBNR as string,",
				"          KNDNR as string,",
				"          ARTNR as string,",
				"          FKART as string,",
				"          FRWAE as string,",
				"          KURSF as string,",
				"          KURSBK as string,",
				"          KURSKZ as string,",
				"          REC_WAERS as string,",
				"          KAUFN as string,",
				"          KDPOS as string,",
				"          RKAUFNR as string,",
				"          SKOST as string,",
				"          PRZNR as string,",
				"          BUKRS as string,",
				"          KOKRS as string,",
				"          WERKS as string,",
				"          GSBER as string,",
				"          VKORG as string,",
				"          VTWEG as string,",
				"          SPART as string,",
				"          HRKFT as string,",
				"          PLIKZ as string,",
				"          KSTAR as string,",
				"          PSPNR as string,",
				"          KSTRG as string,",
				"          RBELN as string,",
				"          RPOSN as string,",
				"          STO_BELNR as string,",
				"          STO_POSNR as string,",
				"          PRCTR as string,",
				"          PPRCTR as string,",
				"          RKESTATU as string,",
				"          TIMESTMP as string,",
				"          COPA_AWTYP as string,",
				"          COPA_AWORG as string,",
				"          COPA_BWZPT as string,",
				"          COPA_AWSYS as string,",
				"          KMMAKL as string,",
				"          KMVTNR as string,",
				"          WW010 as string,",
				"          WW020 as string,",
				"          WW021 as string,",
				"          WW022 as string,",
				"          WW023 as string,",
				"          WW024 as string,",
				"          WGRU1 as string,",
				"          MTART as string,",
				"          PMATA as string,",
				"          KUNRG as string,",
				"          WW025 as string,",
				"          WW026 as string,",
				"          WW027 as string,",
				"          WW028 as string,",
				"          WW029 as string,",
				"          WW030 as string,",
				"          WW031 as string,",
				"          WW032 as string,",
				"          WW033 as string,",
				"          WW034 as string,",
				"          WW035 as string,",
				"          ABSMG_ME as string,",
				"          VV006_ME as string,",
				"          ERLOS as string,",
				"          KWAKRB as string,",
				"          KWKDRB as string,",
				"          KWMARB as string,",
				"          KWMGRB as string,",
				"          KWSKTO as string,",
				"          KWSOHD as string,",
				"          MRABA as string,",
				"          RABAT as string,",
				"          ABSMG as string,",
				"          VV001 as string,",
				"          VV002 as string,",
				"          VV003 as string,",
				"          VV004 as string,",
				"          VV005 as string,",
				"          VV006 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          MANDT as string,",
				"          PALEDGER as string,",
				"          VRGAR as string,",
				"          VERSI as string,",
				"          PERIO as string,",
				"          PAOBJNR as string,",
				"          PASUBNR as string,",
				"          BELNR as string,",
				"          POSNR as string,",
				"          HZDAT as string,",
				"          USNAM as string,",
				"          GJAHR as string,",
				"          PERDE as string,",
				"          WADAT as string,",
				"          FADAT as string,",
				"          BUDAT as string,",
				"          ALTPERIO as string,",
				"          PAPAOBJNR as string,",
				"          PAPASUBNR as string,",
				"          KNDNR as string,",
				"          ARTNR as string,",
				"          FKART as string,",
				"          FRWAE as string,",
				"          KURSF as string,",
				"          KURSBK as string,",
				"          KURSKZ as string,",
				"          REC_WAERS as string,",
				"          KAUFN as string,",
				"          KDPOS as string,",
				"          RKAUFNR as string,",
				"          SKOST as string,",
				"          PRZNR as string,",
				"          BUKRS as string,",
				"          KOKRS as string,",
				"          WERKS as string,",
				"          GSBER as string,",
				"          VKORG as string,",
				"          VTWEG as string,",
				"          SPART as string,",
				"          HRKFT as string,",
				"          PLIKZ as string,",
				"          KSTAR as string,",
				"          PSPNR as string,",
				"          KSTRG as string,",
				"          RBELN as string,",
				"          RPOSN as string,",
				"          STO_BELNR as string,",
				"          STO_POSNR as string,",
				"          PRCTR as string,",
				"          PPRCTR as string,",
				"          RKESTATU as string,",
				"          TIMESTMP as string,",
				"          COPA_AWTYP as string,",
				"          COPA_AWORG as string,",
				"          COPA_BWZPT as string,",
				"          COPA_AWSYS as string,",
				"          KMMAKL as string,",
				"          KMVTNR as string,",
				"          WW010 as string,",
				"          WW020 as string,",
				"          WW021 as string,",
				"          WW022 as string,",
				"          WW023 as string,",
				"          WW024 as string,",
				"          WGRU1 as string,",
				"          MTART as string,",
				"          PMATA as string,",
				"          KUNRG as string,",
				"          WW025 as string,",
				"          WW026 as string,",
				"          WW027 as string,",
				"          WW028 as string,",
				"          WW029 as string,",
				"          WW030 as string,",
				"          WW031 as string,",
				"          WW032 as string,",
				"          WW033 as string,",
				"          WW034 as string,",
				"          WW035 as string,",
				"          ABSMG_ME as string,",
				"          VV006_ME as string,",
				"          ERLOS as string,",
				"          KWAKRB as string,",
				"          KWKDRB as string,",
				"          KWMARB as string,",
				"          KWMGRB as string,",
				"          KWSKTO as string,",
				"          KWSOHD as string,",
				"          MRABA as string,",
				"          RABAT as string,",
				"          ABSMG as string,",
				"          VV001 as string,",
				"          VV002 as string,",
				"          VV003 as string,",
				"          VV004 as string,",
				"          VV005 as string,",
				"          VV006 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          {SAP ID} as string,",
				"          {Open Date} as string,",
				"          {Gross Size} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source1 derive(PERIO = toInteger(PERIO),",
				"          PAOBJNR = toInteger(PAOBJNR),",
				"          PASUBNR = toInteger(PASUBNR),",
				"          GJAHR = toInteger(GJAHR),",
				"          PERDE = toInteger(PERDE),",
				"          ALTPERIO = toInteger(ALTPERIO),",
				"          PAPAOBJNR = toInteger(PAPAOBJNR),",
				"          PAPASUBNR = toInteger(PAPASUBNR),",
				"          KURSF = toDecimal(KURSF,9,5),",
				"          KURSBK = toDecimal(KURSBK,9,5),",
				"          KURSKZ = toDecimal(KURSKZ,9,5),",
				"          KDPOS = toInteger(KDPOS),",
				"          PSPNR = toInteger(PSPNR),",
				"          TIMESTMP = toDecimal(TIMESTMP,16,0),",
				"          KMVTNR = toInteger(KMVTNR),",
				"          ERLOS = toDecimal(ERLOS,15,2),",
				"          KWAKRB = toDecimal(KWAKRB,15,2),",
				"          KWKDRB = toDecimal(KWKDRB,15,2),",
				"          KWMARB = toDecimal(KWMARB,15,2),",
				"          KWMGRB = toDecimal(KWMGRB,15,2),",
				"          KWSKTO = toDecimal(KWSKTO,15,2),",
				"          KWSOHD = toDecimal(KWSOHD,15,2),",
				"          MRABA = toDecimal(MRABA,15,2),",
				"          RABAT = toDecimal(RABAT,15,2),",
				"          ABSMG = toDecimal(ABSMG,15,2),",
				"          VV001 = toDecimal(VV001,15,2),",
				"          VV002 = toDecimal(VV002,15,2),",
				"          VV003 = toDecimal(VV003,15,2),",
				"          VV004 = toDecimal(VV004,15,2),",
				"          VV005 = toDecimal(VV005,15,2),",
				"          VV006 = toDecimal(VV006,15,2)) ~> derivedColumn1",
				"derivedColumn1, derivedColumn2 union(byName: true)~> union1",
				"source2 derive(PERIO = toInteger(PERIO),",
				"          PAOBJNR = toInteger(PAOBJNR),",
				"          PASUBNR = toInteger(PASUBNR),",
				"          GJAHR = toInteger(GJAHR),",
				"          PERDE = toInteger(PERDE),",
				"          ALTPERIO = toInteger(ALTPERIO),",
				"          PAPAOBJNR = toInteger(PAPAOBJNR),",
				"          PAPASUBNR = toInteger(PAPASUBNR),",
				"          KURSF = toDecimal(KURSF,9,5),",
				"          KURSBK = toDecimal(KURSBK,9,5),",
				"          KURSKZ = toDecimal(KURSKZ,9,5),",
				"          KDPOS = toInteger(KDPOS),",
				"          PSPNR = toInteger(PSPNR),",
				"          TIMESTMP = toDecimal(TIMESTMP,16,0),",
				"          KMVTNR = toInteger(KMVTNR),",
				"          ERLOS = toDecimal(ERLOS,15,2),",
				"          KWAKRB = toDecimal(KWAKRB,15,2),",
				"          KWKDRB = toDecimal(KWKDRB,15,2),",
				"          KWMARB = toDecimal(KWMARB,15,2),",
				"          KWMGRB = toDecimal(KWMGRB,15,2),",
				"          KWSKTO = toDecimal(KWSKTO,15,2),",
				"          KWSOHD = toDecimal(KWSOHD,15,2),",
				"          MRABA = toDecimal(MRABA,15,2),",
				"          RABAT = toDecimal(RABAT,15,2),",
				"          ABSMG = toDecimal(ABSMG,15,2),",
				"          VV001 = toDecimal(VV001,15,2),",
				"          VV002 = toDecimal(VV002,15,2),",
				"          VV003 = toDecimal(VV003,15,2),",
				"          VV004 = toDecimal(VV004,15,2),",
				"          VV005 = toDecimal(VV005,15,2),",
				"          VV006 = toDecimal(VV006,15,2)) ~> derivedColumn2",
				"union1, source3 join(KNDNR == {SAP ID},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(GROSS_SIZE = toDecimal({Gross Size},6,2)) ~> derivedColumn3",
				"derivedColumn3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['VENTA_202206_MANUAL.csv'],",
				"     umask: 0666,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          MANDT,",
				"          PALEDGER,",
				"          VRGAR,",
				"          VERSI,",
				"          PERIO,",
				"          PAOBJNR,",
				"          PASUBNR,",
				"          BELNR,",
				"          POSNR,",
				"          HZDAT,",
				"          USNAM,",
				"          GJAHR,",
				"          PERDE,",
				"          WADAT,",
				"          FADAT,",
				"          BUDAT,",
				"          ALTPERIO,",
				"          PAPAOBJNR,",
				"          PAPASUBNR,",
				"          KNDNR,",
				"          ARTNR,",
				"          FKART,",
				"          FRWAE,",
				"          KURSF,",
				"          KURSBK,",
				"          KURSKZ,",
				"          REC_WAERS,",
				"          KAUFN,",
				"          KDPOS,",
				"          RKAUFNR,",
				"          SKOST,",
				"          PRZNR,",
				"          BUKRS,",
				"          KOKRS,",
				"          WERKS,",
				"          GSBER,",
				"          VKORG,",
				"          VTWEG,",
				"          SPART,",
				"          HRKFT,",
				"          PLIKZ,",
				"          KSTAR,",
				"          PSPNR,",
				"          KSTRG,",
				"          RBELN,",
				"          RPOSN,",
				"          STO_BELNR,",
				"          STO_POSNR,",
				"          PRCTR,",
				"          PPRCTR,",
				"          RKESTATU,",
				"          TIMESTMP,",
				"          COPA_AWTYP,",
				"          COPA_AWORG,",
				"          COPA_BWZPT,",
				"          COPA_AWSYS,",
				"          KMMAKL,",
				"          KMVTNR,",
				"          WW010,",
				"          WW020,",
				"          WW021,",
				"          WW022,",
				"          WW023,",
				"          WW024,",
				"          WGRU1,",
				"          MTART,",
				"          PMATA,",
				"          KUNRG,",
				"          WW025,",
				"          WW026,",
				"          WW027,",
				"          WW028,",
				"          WW029,",
				"          WW030,",
				"          WW031,",
				"          WW032,",
				"          WW033,",
				"          WW034,",
				"          WW035,",
				"          ABSMG_ME,",
				"          VV006_ME,",
				"          ERLOS,",
				"          KWAKRB,",
				"          KWKDRB,",
				"          KWMARB,",
				"          KWMGRB,",
				"          KWSKTO,",
				"          KWSOHD,",
				"          MRABA,",
				"          RABAT,",
				"          ABSMG,",
				"          VV001,",
				"          VV002,",
				"          VV003,",
				"          VV004,",
				"          VV005,",
				"          VV006,",
				"          OPEN_DATE = {Open Date},",
				"          GROSS_SIZE",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}
{
	"name": "SAP_DM_MARA_CON",
	"properties": {
		"description": "Maestro Materiales - Generales ",
		"folder": {
			"name": "Datalake_Levis/Datos Maestros/02 Consumption"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DM_MARA_ST",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DL_PQT_MARA",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          MANDT as string,",
				"          MATNR as string,",
				"          ERSDA as string,",
				"          ERNAM as string,",
				"          LAEDA as string,",
				"          AENAM as string,",
				"          VPSTA as string,",
				"          PSTAT as string,",
				"          LVORM as string,",
				"          MTART as string,",
				"          MBRSH as string,",
				"          MATKL as string,",
				"          BISMT as string,",
				"          MEINS as string,",
				"          BSTME as string,",
				"          ZEINR as string,",
				"          ZEIAR as string,",
				"          ZEIVR as string,",
				"          ZEIFO as string,",
				"          AESZN as string,",
				"          BLATT as string,",
				"          BLANZ as integer,",
				"          FERTH as string,",
				"          FORMT as string,",
				"          GROES as string,",
				"          WRKST as string,",
				"          NORMT as string,",
				"          LABOR as string,",
				"          EKWSL as string,",
				"          BRGEW as decimal(13,3),",
				"          NTGEW as decimal(13,3),",
				"          GEWEI as string,",
				"          VOLUM as decimal(13,3),",
				"          VOLEH as string,",
				"          BEHVO as string,",
				"          RAUBE as string,",
				"          TEMPB as string,",
				"          DISST as string,",
				"          TRAGR as string,",
				"          STOFF as string,",
				"          SPART as string,",
				"          KUNNR as string,",
				"          EANNR as string,",
				"          WESCH as decimal(13,3),",
				"          BWVOR as string,",
				"          BWSCL as string,",
				"          SAISO as string,",
				"          ETIAR as string,",
				"          ETIFO as string,",
				"          ENTAR as string,",
				"          EAN11 as string,",
				"          NUMTP as string,",
				"          LAENG as decimal(13,3),",
				"          BREIT as decimal(13,3),",
				"          HOEHE as decimal(13,3),",
				"          MEABM as string,",
				"          PRDHA as string,",
				"          AEKLK as string,",
				"          CADKZ as string,",
				"          QMPUR as string,",
				"          ERGEW as decimal(13,3),",
				"          ERGEI as string,",
				"          ERVOL as decimal(13,3),",
				"          ERVOE as string,",
				"          GEWTO as decimal(3,1),",
				"          VOLTO as decimal(3,1),",
				"          VABME as string,",
				"          KZREV as string,",
				"          KZKFG as string,",
				"          XCHPF as string,",
				"          VHART as string,",
				"          FUELG as decimal(3,0),",
				"          STFAK as integer,",
				"          MAGRV as string,",
				"          BEGRU as string,",
				"          DATAB as string,",
				"          LIQDT as string,",
				"          SAISJ as string,",
				"          PLGTP as string,",
				"          MLGUT as string,",
				"          EXTWG as string,",
				"          SATNR as string,",
				"          ATTYP as string,",
				"          KZKUP as string,",
				"          KZNFM as string,",
				"          PMATA as string,",
				"          MSTAE as string,",
				"          MSTAV as string,",
				"          MSTDE as string,",
				"          MSTDV as string,",
				"          TAKLV as string,",
				"          RBNRM as string,",
				"          MHDRZ as decimal(4,0),",
				"          MHDHB as decimal(4,0),",
				"          MHDLP as decimal(3,0),",
				"          INHME as string,",
				"          INHAL as decimal(13,3),",
				"          VPREH as decimal(5,0),",
				"          ETIAG as string,",
				"          INHBR as decimal(13,3),",
				"          CMETH as string,",
				"          CUOBF as integer,",
				"          KZUMW as string,",
				"          KOSCH as string,",
				"          SPROF as string,",
				"          NRFHG as string,",
				"          MFRPN as string,",
				"          MFRNR as string,",
				"          BMATN as string,",
				"          MPROF as string,",
				"          KZWSM as string,",
				"          SAITY as string,",
				"          PROFL as string,",
				"          IHIVI as string,",
				"          ILOOS as string,",
				"          SERLV as string,",
				"          KZGVH as string,",
				"          XGCHP as string,",
				"          KZEFF as string,",
				"          COMPL as integer,",
				"          IPRKZ as string,",
				"          RDMHD as string,",
				"          PRZUS as string,",
				"          MTPOS_MARA as string,",
				"          BFLME as string,",
				"          MATFI as string,",
				"          CMREL as string,",
				"          BBTYP as string,",
				"          SLED_BBD as string,",
				"          GTIN_VARIANT as string,",
				"          GENNR as string,",
				"          RMATP as string,",
				"          GDS_RELEVANT as string,",
				"          WEORA as string,",
				"          HUTYP_DFLT as string,",
				"          PILFERABLE as string,",
				"          WHSTC as string,",
				"          WHMATGR as string,",
				"          HNDLCODE as string,",
				"          HAZMAT as string,",
				"          HUTYP as string,",
				"          TARE_VAR as string,",
				"          MAXC as decimal(15,3),",
				"          MAXC_TOL as decimal(3,1),",
				"          MAXL as decimal(15,3),",
				"          MAXB as decimal(15,3),",
				"          MAXH as decimal(15,3),",
				"          MAXDIM_UOM as string,",
				"          HERKL as string,",
				"          MFRGR as string,",
				"          QQTIME as decimal(3,0),",
				"          QQTIMEUOM as string,",
				"          QGRP as string,",
				"          SERIAL as string,",
				"          PS_SMARTFORM as string,",
				"          LOGUNIT as string,",
				"          CWQREL as string,",
				"          CWQPROC as string,",
				"          CWQTOLGR as string,",
				"          ADPROF as string,",
				"          {_BEV1_LULEINH} as integer,",
				"          {_BEV1_LULDEGRP} as string,",
				"          {_BEV1_NESTRUCCAT} as string,",
				"          {_DSD_SL_TOLTYP} as string,",
				"          {_DSD_SV_CNT_GRP} as string,",
				"          {_DSD_VC_GROUP} as string,",
				"          {_VSO_R_TILT_IND} as string,",
				"          {_VSO_R_STACK_IND} as string,",
				"          {_VSO_R_BOT_IND} as string,",
				"          {_VSO_R_TOP_IND} as string,",
				"          {_VSO_R_STACK_NO} as integer,",
				"          {_VSO_R_PAL_IND} as string,",
				"          {_VSO_R_PAL_OVR_D} as decimal(13,3),",
				"          {_VSO_R_PAL_OVR_W} as decimal(13,3),",
				"          {_VSO_R_PAL_B_HT} as decimal(13,3),",
				"          {_VSO_R_PAL_MIN_H} as decimal(13,3),",
				"          {_VSO_R_TOL_B_HT} as decimal(13,3),",
				"          {_VSO_R_NO_P_GVH} as integer,",
				"          {_VSO_R_QUAN_UNIT} as string,",
				"          {_VSO_R_KZGVH_IND} as string,",
				"          PACKCODE as string,",
				"          DG_PACK_STATUS as string,",
				"          MCOND as string,",
				"          RETDELC as string,",
				"          LOGLEV_RETO as string,",
				"          NSNID as string,",
				"          ADSPC_SPC as integer,",
				"          IMATN as string,",
				"          PICNUM as string,",
				"          BSTAT as string,",
				"          COLOR_ATINN as integer,",
				"          SIZE1_ATINN as integer,",
				"          SIZE2_ATINN as integer,",
				"          COLOR as string,",
				"          SIZE1 as string,",
				"          SIZE2 as string,",
				"          FREE_CHAR as string,",
				"          CARE_CODE as string,",
				"          BRAND_ID as string,",
				"          FIBER_CODE1 as string,",
				"          FIBER_PART1 as integer,",
				"          FIBER_CODE2 as string,",
				"          FIBER_PART2 as integer,",
				"          FIBER_CODE3 as string,",
				"          FIBER_PART3 as integer,",
				"          FIBER_CODE4 as string,",
				"          FIBER_PART4 as integer,",
				"          FIBER_CODE5 as string,",
				"          FIBER_PART5 as integer,",
				"          FASHGRD as string,",
				"          ZZPRDTY as string,",
				"          ZZGLFP as string,",
				"          ZZORIGBFF as string,",
				"          ZZFABRIC as string,",
				"          ZZFFC as string,",
				"          ZZFFC_TXT as string,",
				"          ZZCLSCD as string,",
				"          ZZSUBCLSCD as string,",
				"          ZZGENDERCD as string,",
				"          ZZSTYLE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source1",
				"source1 derive(BLANZ = toInteger(BLANZ),",
				"          BRGEW = toDecimal(BRGEW,13,3),",
				"          NTGEW = toDecimal(NTGEW,13,3),",
				"          VOLUM = toDecimal(VOLUM,13,3),",
				"          WESCH = toDecimal(WESCH,13,3),",
				"          LAENG = toDecimal(LAENG,13,3),",
				"          BREIT = toDecimal(BREIT,13,3),",
				"          HOEHE = toDecimal(HOEHE,13,3),",
				"          ERGEW = toDecimal(ERGEW,13,3),",
				"          ERVOL = toDecimal(ERVOL,13,3),",
				"          GEWTO = toDecimal(GEWTO,13,3),",
				"          VOLTO = toDecimal(VOLTO,13,3),",
				"          FUELG = toDecimal(FUELG,13,3),",
				"          STFAK = toInteger(STFAK),",
				"          MHDRZ = toDecimal(MHDRZ,4,0),",
				"          MHDHB = toDecimal(MHDHB,4,0),",
				"          MHDLP = toDecimal(MHDLP,3,0),",
				"          INHAL = toDecimal(INHAL,13,3),",
				"          VPREH = toDecimal(VPREH,5,0),",
				"          INHBR = toDecimal(INHBR,13,3),",
				"          CUOBF = toInteger(CUOBF),",
				"          COMPL = toInteger(COMPL),",
				"          MAXC = toDecimal(MAXC,15,3),",
				"          MAXC_TOL = toDecimal(MAXC_TOL,3,1),",
				"          MAXL = toDecimal(MAXL,15,3),",
				"          MAXB = toDecimal(MAXB,15,3),",
				"          MAXH = toDecimal(MAXH,15,3),",
				"          QQTIME = toDecimal(QQTIME,3,0),",
				"          {_BEV1_LULEINH} = toInteger({_BEV1_LULEINH}),",
				"          {_VSO_R_STACK_NO} = toInteger({_VSO_R_STACK_NO}),",
				"          {_VSO_R_PAL_OVR_D} = toDecimal({_VSO_R_PAL_OVR_D},13,3),",
				"          {_VSO_R_PAL_OVR_W} = toDecimal({_VSO_R_PAL_OVR_W},13,3),",
				"          {_VSO_R_PAL_B_HT} = toDecimal({_VSO_R_PAL_B_HT},13,3),",
				"          {_VSO_R_PAL_MIN_H} = toDecimal({_VSO_R_PAL_MIN_H},13,3),",
				"          {_VSO_R_TOL_B_HT} = toDecimal({_VSO_R_TOL_B_HT},13,3),",
				"          {_VSO_R_NO_P_GVH} = toInteger({_VSO_R_NO_P_GVH}),",
				"          ADSPC_SPC = toInteger(ADSPC_SPC),",
				"          COLOR_ATINN = toInteger(COLOR_ATINN),",
				"          SIZE1_ATINN = toInteger(SIZE1_ATINN),",
				"          SIZE2_ATINN = toInteger(SIZE2_ATINN),",
				"          FIBER_PART1 = toInteger(FIBER_PART1),",
				"          FIBER_PART2 = toInteger(FIBER_PART2),",
				"          FIBER_PART3 = toInteger(FIBER_PART3),",
				"          FIBER_PART4 = toInteger(FIBER_PART4),",
				"          FIBER_PART5 = toInteger(FIBER_PART5)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}
{
	"name": "SAP_DM_T001_CON",
	"properties": {
		"description": "Sociedades",
		"folder": {
			"name": "Datalake_Levis/Datos Maestros/02 Consumption"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DM_T001_ST",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DL_PQT_T001",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DM_SOCIEDAD_FI",
						"type": "DatasetReference"
					},
					"name": "DMSOCIEDADFI",
					"rejectedDataLinkedService": {
						"referenceName": "edw-prd-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          {\"} as string,",
				"          MANDT as string,",
				"          BUKRS as string,",
				"          BUTXT as string,",
				"          ORT01 as string,",
				"          LAND1 as string,",
				"          WAERS as string,",
				"          SPRAS as string,",
				"          KTOPL as string,",
				"          WAABW as string,",
				"          PERIV as string,",
				"          KOKFI as string,",
				"          RCOMP as string,",
				"          ADRNR as string,",
				"          STCEG as string,",
				"          FIKRS as string,",
				"          XFMCO as string,",
				"          XFMCB as string,",
				"          XFMCA as string,",
				"          TXJCD as string,",
				"          FMHRDATE as string,",
				"          BUVAR as string,",
				"          FDBUK as string,",
				"          XFDIS as string,",
				"          XVALV as string,",
				"          XSKFN as string,",
				"          KKBER as string,",
				"          XMWSN as string,",
				"          MREGL as string,",
				"          XGSBE as string,",
				"          XGJRV as string,",
				"          XKDFT as string,",
				"          XPROD as string,",
				"          XEINK as string,",
				"          XJVAA as string,",
				"          XVVWA as string,",
				"          XSLTA as string,",
				"          XFDMM as string,",
				"          XFDSD as string,",
				"          XEXTB as string,",
				"          EBUKR as string,",
				"          KTOP2 as string,",
				"          UMKRS as string,",
				"          BUKRS_GLOB as string,",
				"          FSTVA as string,",
				"          OPVAR as string,",
				"          XCOVR as string,",
				"          TXKRS as string,",
				"          WFVAR as string,",
				"          XBBBF as string,",
				"          XBBBE as string,",
				"          XBBBA as string,",
				"          XBBKO as string,",
				"          XSTDT as string,",
				"          MWSKV as string,",
				"          MWSKA as string,",
				"          IMPDA as string,",
				"          XNEGP as string,",
				"          XKKBI as string,",
				"          WT_NEWWT as string,",
				"          PP_PDATE as string,",
				"          INFMT as string,",
				"          FSTVARE as string,",
				"          KOPIM as string,",
				"          DKWEG as string,",
				"          OFFSACCT as string,",
				"          BAPOVAR as string,",
				"          XCOS as string,",
				"          XCESSION as string,",
				"          XSPLT as string,",
				"          SURCCM as string,",
				"          DTPROV as string,",
				"          DTAMTC as string,",
				"          DTTAXC as string,",
				"          DTTDSP as string,",
				"          DTAXR as string,",
				"          XVATDATE as string,",
				"          PST_PER_VAR as string,",
				"          {FM_DERIVE_ACC\"} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          MANDT,",
				"          BUKRS,",
				"          BUTXT,",
				"          ORT01,",
				"          LAND1,",
				"          WAERS,",
				"          SPRAS,",
				"          KTOPL,",
				"          WAABW,",
				"          PERIV,",
				"          KOKFI,",
				"          RCOMP,",
				"          ADRNR,",
				"          STCEG,",
				"          FIKRS,",
				"          XFMCO,",
				"          XFMCB,",
				"          XFMCA,",
				"          TXJCD,",
				"          FMHRDATE,",
				"          BUVAR,",
				"          FDBUK,",
				"          XFDIS,",
				"          XVALV,",
				"          XSKFN,",
				"          KKBER,",
				"          XMWSN,",
				"          MREGL,",
				"          XGSBE,",
				"          XGJRV,",
				"          XKDFT,",
				"          XPROD,",
				"          XEINK,",
				"          XJVAA,",
				"          XVVWA,",
				"          XSLTA,",
				"          XFDMM,",
				"          XFDSD,",
				"          XEXTB,",
				"          EBUKR,",
				"          KTOP2,",
				"          UMKRS,",
				"          BUKRS_GLOB,",
				"          FSTVA,",
				"          OPVAR,",
				"          XCOVR,",
				"          TXKRS,",
				"          WFVAR,",
				"          XBBBF,",
				"          XBBBE,",
				"          XBBBA,",
				"          XBBKO,",
				"          XSTDT,",
				"          MWSKV,",
				"          MWSKA,",
				"          IMPDA,",
				"          XNEGP,",
				"          XKKBI,",
				"          WT_NEWWT,",
				"          PP_PDATE,",
				"          INFMT,",
				"          FSTVARE,",
				"          KOPIM,",
				"          DKWEG,",
				"          OFFSACCT,",
				"          BAPOVAR,",
				"          XCOS,",
				"          XCESSION,",
				"          XSPLT,",
				"          SURCCM,",
				"          DTPROV,",
				"          DTAMTC,",
				"          DTTAXC,",
				"          DTTDSP,",
				"          DTAXR,",
				"          XVATDATE,",
				"          PST_PER_VAR,",
				"          {FM_DERIVE_ACC\"}",
				"     )) ~> sink1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Mandante as string,",
				"          Sociedad as string,",
				"          Sociedad_Texto as string,",
				"          Ciudad as string,",
				"          Pais as string,",
				"          Moneda as string,",
				"          Idioma as string,",
				"          Plan_de_cuentas as string,",
				"          Desviacion_TC_porcentaje as string,",
				"          Variante_ejercicio as string,",
				"          Ind_asignacion as string,",
				"          Sociedad_GL as string,",
				"          Direccion as string,",
				"          Entidad_CP as string",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['DM_SOCIEDAD_FI.PARQUET'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     mapColumn(",
				"          Mandante = MANDT,",
				"          Sociedad = BUKRS,",
				"          Sociedad_Texto = BUTXT,",
				"          Ciudad = ORT01,",
				"          Pais = LAND1,",
				"          Moneda = WAERS,",
				"          Idioma = SPRAS,",
				"          Plan_de_cuentas = KTOPL,",
				"          Desviacion_TC_porcentaje = WAABW,",
				"          Variante_ejercicio = PERIV,",
				"          Ind_asignacion = KOKFI,",
				"          Sociedad_GL = RCOMP,",
				"          Direccion = ADRNR,",
				"          Entidad_CP = FIKRS",
				"     ),",
				"     partitionBy('hash', 1)) ~> DMSOCIEDADFI"
			]
		}
	}
}